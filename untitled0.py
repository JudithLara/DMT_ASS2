# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lqwqN0y9VOCIifVLIaRYgz9GTJc9_caU
"""

import pandas as pd
import matplotlib.pyplot as plt
import re
import os
import numpy as np
import scipy as stats

df = pd.read_csv("training_set_VU_DM.csv", delimiter=',')
df.head()

"""1.  Winnaars gebruiken alle numerical features
2.  Een van de belangrijkste factoren voor consumers is de prijs:
- price rank tov hotels in de omgeving (prop_coutry_id) CHECK
- difference between hotel price and total price CHECK
price different of current price and when booked previously CHECK
3. Historical/composite features:
- average star rating of previous booked hotels BY ADDING MEAN
- average price of previous booked hotels BY ADDING MEAN
- interaction feature: hoeveel kamers*length stay om inzicht te krijgen op hoe “groot” de nodige boeking is CHECK
- rating difference of overall star rating and from customer CHECK
4. hotel position toevoegen als feature omdat dit niet in de test data zit
5. statistical features

PRICE FEATURES
"""

# adds new column 'price_rank_country' to store rank of each hotel's price within the same country/destination
df['price_rank_country'] = df.groupby(['prop_country_id'])['price_usd'].rank(ascending=True)

# adds new column 'price_gross_difference' to store difference between price_usd and gross_bookings_usd
df['price_gross_diff'] = df['price_usd'] - df['gross_bookings_usd']

# price different of current price and when booked previously
df['price_diff'] = df['price_usd'] - df['visitor_hist_adr_usd']

"""HISTORICAL/COMPOSITE FEATURES

"""

# adds new column to know the total room/length of the stay searched
df['total_room_stay'] = df['srch_room_count'] * df['srch_length_of_stay']

# rating difference of overall star rating and from customer
df['rating_diff'] = df['prop_starrating'] - df['visitor_hist_starrating']

# define numeric columns to apply statistical functions
numeric_columns = ['visitor_hist_starrating', 'visitor_hist_adr_usd', 'prop_starrating',
                   'prop_review_score', 'prop_location_score1', 'prop_location_score2',
                   'prop_log_historical_price', 'price_usd', 'promotion_flag',
                   'gross_bookings_usd', 'srch_destination_id', 'srch_length_of_stay',
                   'srch_booking_window', 'srch_adults_count', 'srch_children_count',
                   'srch_room_count', 'srch_query_affinity_score', 'orig_destination_distance',
                   'comp_rate', 'comp_inv', 'comp_percent_diff']

# Group by 'srch_id' and compute statistical features
statistical_features = df.groupby('srch_id')[numeric_columns].agg(['mean', 'median', 'min', 'max'])

# Flatten the multi-level column index
statistical_features.columns = ['{}_{}'.format(col, stat) for col, stat in statistical_features.columns]

# Merge the statistical features back into the original dataframe
df = pd.merge(df, statistical_features, on='srch_id', how='left')

df.head()